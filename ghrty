[1mdiff --git a/php/create_hash.php b/php/create_hash.php[m
[1mnew file mode 100644[m
[1mindex 0000000..6a45520[m
[1m--- /dev/null[m
[1m+++ b/php/create_hash.php[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mhash('sha512','tring');  //128[m
[32m+[m[32mhash('sha256','tring');  //64[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[1mdiff --git a/php/encryption.php b/php/encryption.php[m
[1mdeleted file mode 100644[m
[1mindex f70d74c..0000000[m
[1m--- a/php/encryption.php[m
[1m+++ /dev/null[m
[36m@@ -1,51 +0,0 @@[m
[31m-<?php[m
[31m-[m
[31m-class Encryption {[m
[31m-	[m
[31m-	private static $ENCRYPTION_KEY = 'd0a7e7997b6d5fcd55f4b5c32611b87cd923e88837b63bf2941ef819dc8ca282';[m
[31m-[m
[31m-	public static function encrypt($encrypt, $use_base64 = false, $item_related_key = '') {[m
[31m-		$encrypt = serialize($encrypt);[m
[31m-		$iv_size = mcrypt_get_iv_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_CBC);[m
[31m-		$iv = mcrypt_create_iv(mcrypt_get_iv_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_CBC), MCRYPT_RAND);[m
[31m-		$key = pack('H*', self::$ENCRYPTION_KEY);[m
[31m-		$mac = hash_hmac('sha256', $encrypt, substr(bin2hex($key), -32));[m
[31m-		$passcrypt = mcrypt_encrypt(MCRYPT_RIJNDAEL_128, $key, $encrypt.$mac, MCRYPT_MODE_CBC, $iv);[m
[31m-		if ($use_base64) return base64_encode($iv.$passcrypt);[m
[31m-		else return $iv . $passcrypt;[m
[31m-	}[m
[31m-[m
[31m-	public static function decrypt($decrypt, $use_base64 = false, $item_related_key = '') {[m
[31m-		$decoded = ($use_base64) ? base64_decode($decrypt) : $decrypt;[m
[31m-		$iv_size = mcrypt_get_iv_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_CBC);[m
[31m-		$decrpyted = substr($decoded, $iv_size);[m
[31m-		$iv = substr($decoded, 0, $iv_size);[m
[31m-		$key = pack('H*', self::$ENCRYPTION_KEY);[m
[31m-		$decrypted = rtrim(mcrypt_decrypt(MCRYPT_RIJNDAEL_128, $key, $decrpyted, MCRYPT_MODE_CBC, $iv), '\0');[m
[31m-		//$mac = substr($decrypted, -64);[m
[31m-		//$calcmac = hash_hmac('sha256', $decrypted, substr(bin2hex($key), -32));[m
[31m-		return unserialize($decrypted);[m
[31m-	}[m
[31m-[m
[31m-	public static function generateRandomHex($length = 64) {[m
[31m-		$characters = '0123456789abcdef';[m
[31m-		$charactersLength = strlen($characters) - 1;[m
[31m-		$randomString = '';[m
[31m-		for ($i = 0; $i < $length; $i++) $randomString .= $characters[rand(0, $charactersLength)];[m
[31m-		return $randomString;[m
[31m-	}[m
[31m-	[m
[31m-	public static function test ($test_string) {[m
[31m-		echo strlen(self::$ENCRYPTION_KEY);[m
[31m-		echo "Testing '$test_string'...";[m
[31m-		for ($index = 0; $index < $max_number = 1000; $index++) if (self::decrypt(self::encrypt($test_string, true), true) === $test_string) @$n++;[m
[31m-		echo "Passed $n times of $max_number.";[m
[31m-	}[m
[31m-}[m
[31m-[m
[31m-//Encryption::test('teszt szÃ¶veg');[m
[31m-//echo Encryption::generateRandomHex();[m
[31m-//$encoded = Encryption::encrypt('Text to encrypt');[m
[31m-//echo Encryption::decrypt($encoded);[m
[31m-[m
[31m-[m
[1mdiff --git a/php/mysql_pdo.php b/php/mysql_pdo.php[m
[1mnew file mode 100644[m
[1mindex 0000000..5067d6c[m
[1m--- /dev/null[m
[1m+++ b/php/mysql_pdo.php[m
[36m@@ -0,0 +1,61 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m$servername = "localhost";[m
[32m+[m[32m$username = "root";[m
[32m+[m[32m$password = "";[m
[32m+[m[32m$dbname = "tm";[m
[32m+[m
[32m+[m[32mtry {[m
[32m+[m[32m    $conn = new PDO("mysql:host=$servername;dbname=$dbname", $username, $password);[m
[32m+[m[32m    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);[m
[32m+[m
[32m+[m[32m//INSERT ----------------------------------------------------------------------------------------[m
[32m+[m[32m//    $stmt = $conn->prepare("INSERT INTO houses (hid, text) VALUES (:hid, :text)");[m
[32m+[m[32m//    $stmt->bindParam(':hid', $hid);[m
[32m+[m[32m//    $stmt->bindParam(':text', $text);[m
[32m+[m[32m//[m
[32m+[m[32m//		$hid = 4; $text = 'Negyedik haz';[m
[32m+[m[32m//		$stmt->execute();[m
[32m+[m[32m//[m[41m		[m
[32m+[m[32m//		$hid = 5; $text = 'Otodik haz';[m
[32m+[m[32m//    $stmt->execute();[m
[32m+[m[32m//[m
[32m+[m[32m//    echo "New records created successfully";[m
[32m+[m[41m		[m
[32m+[m[32m//-------------------[m
[32m+[m[32m//		$stmt = $conn->prepare("INSERT INTO houses (hid, text) VALUES (:hid, :text)");[m
[32m+[m[32m//		$stmt->execute(array(':hid' => 6, ':text' => 'Hatodik haz'));[m
[32m+[m[32m//		echo "New records created successfully";[m
[32m+[m[41m		[m
[32m+[m[32m//UPDATE ----------------------------------------------------------------------------------------[m
[32m+[m[41m		[m
[32m+[m[32m//SELECT ----------------------------------------------------------------------------------------[m
[32m+[m[32m//		$stmt = $conn->prepare("select * FROM auction");[m
[32m+[m[32m//		$rows = $stmt->execute();[m
[32m+[m[32m//		$rows = $stmt->fetchAll();[m
[32m+[m[32m//		var_dump($rows);[m
[32m+[m[32m//----------------[m[41m		[m
[32m+[m[32m//		$stmt = $conn->query("select * FROM auction");[m
[32m+[m[32m//		$rows = $stmt->fetchAll(PDO::FETCH_OBJ);[m
[32m+[m[32m//		var_dump($rows);[m
[32m+[m[32m//SELECT PREPARED ----------------------------------------------------------------------------------------[m
[32m+[m[32m//		$stmt = $conn->prepare("select * FROM auction WHERE hid = :hid");[m
[32m+[m[32m//		$stmt->execute(array(':hid' => 1));[m
[32m+[m[32m//		$rows = $stmt->fetchAll();[m
[32m+[m[32m//		var_dump($rows);[m
[32m+[m[41m		[m
[32m+[m[32m//CALL PROCEDURE ----------------------------------------------------------------------------------------[m
[32m+[m[32m$input = 5;[m
[32m+[m[32m$proc = $conn->prepare("CALL add_auction_participants(1,3,@ret,@rolled);");[m
[32m+[m[32m$proc->execute();[m
[32m+[m[32m$proc->closeCursor();[m
[32m+[m[32m$output = $conn->query("SELECT @ret, @rolled;")->fetch(PDO::FETCH_ASSOC);[m
[32m+[m[32mvar_dump($output);[m
[32m+[m
[32m+[m
[32m+[m[32m//$stmt = $conn->query('CALL add_auction_participants(1,3,@ret,@rolled);');[m
[32m+[m[32m//$stmt->execute();[m
[32m+[m[32m//$stmt2 = $conn->query('SELECT @ret, @rolled;');[m
[32m+[m[32m////var_dump($result->fetch_assoc()); //array (size=2)  '@ret' => string '3' (length=1)  '@rolled' => string '0' (length=1) //array (size=2)  '@ret' => string '3' (length=1)  '@rolled' => string '0' (length=1)[m
[32m+[m[32m} catch(PDOException $e) {[m
[32m+[m[32m    echo "Error: " . $e->getMessage();[m
[32m+[m[32m}[m
[1mdiff --git a/php/mysqli.php b/php/mysqli.php[m
[1mindex 286c2f8..53dd860 100644[m
[1m--- a/php/mysqli.php[m
[1m+++ b/php/mysqli.php[m
[36m@@ -1,44 +1,71 @@[m
 <?php[m
[32m+[m[32m$servername = "localhost";[m
[32m+[m[32m$username = "root";[m
[32m+[m[32m$password = "";[m
[32m+[m[32m$dbname = "tm";[m
 [m
[31m-$mysqli = new mysqli("localhost", "my_user", "my_password", "world");[m
[32m+[m[32m$mysqli = new mysqli($servername, $username, $password, $dbname);[m
 [m
[31m-/* check connection */[m
 if (mysqli_connect_errno()) {[m
     printf("Connect failed: %s\n", mysqli_connect_error());[m
     exit();[m
 }[m
 [m
[32m+[m[32m//CREATE ----------------------------------------------------------------------------------------[m
[32m+[m[32m//$mysqli->query("CREATE TABLE myCity LIKE City");[m
 [m
[31m-$mysqli->query("CREATE TABLE myCity LIKE City");[m
 [m
[32m+[m[32m//INSERT ----------------------------------------------------------------------------------------[m
[32m+[m[32m//$query = "INSERT INTO houses (hid, text) VALUES (?,?)";[m
[32m+[m[32m//$stmt = $mysqli->prepare($query);[m
[32m+[m[32m//$stmt->bind_param("is", $val1, $val2);[m
[32m+[m[32m//[m
[32m+[m[32m//$val1 = '2';[m
[32m+[m[32m//$val2 = 'MÃ¡sodik teszt';[m
[32m+[m[32m//$stmt->execute();[m
[32m+[m[32m//[m
[32m+[m[32m//$val1 = '3';[m
[32m+[m[32m//$val2 = 'Harmadik teszt';[m
[32m+[m[32m//$stmt->execute();[m
[32m+[m[32m//$stmt->close();[m
 [m
[31m-$query = "INSERT INTO myCity (Name, CountryCode, District) VALUES (?,?,?)";[m
[31m-$stmt = $mysqli->prepare($query);[m
[31m-$stmt->bind_param("sss", $val1, $val2, $val3);[m
 [m
[32m+[m[32m//UPDATE ----------------------------------------------------------------------------------------[m
[32m+[m[32m//if ($mysqli->query("UPDATE houses SET text='Masodik' WHERE hid=2") === TRUE) echo "Record updated successfully";[m
[32m+[m[32m//else echo "Error updating record: " . $mysqli->error;[m
 [m
[31m-$val1 = 'Stuttgart';[m
[31m-$val2 = 'DEU';[m
[31m-$val3 = 'Baden-Wuerttemberg';[m
[31m-$stmt->execute();[m
[32m+[m[32m//SELECT ----------------------------------------------------------------------------------------[m
[32m+[m[32m//$query = "SELECT hid, text FROM houses";[m
[32m+[m[32m//if ($result = $mysqli->query($query)) {[m
[32m+[m[32m//    while ($row = $result->fetch_row()) {[m
[32m+[m[32m//        printf("%s,%s\n", $row[0], $row[1]);[m
[32m+[m[32m//    }[m
[32m+[m[32m//    $result->close();[m
[32m+[m[32m//}[m
 [m
[31m-$val1 = 'Bordeaux';[m
[31m-$val2 = 'FRA';[m
[31m-$val3 = 'Aquitaine';[m
[31m-$stmt->execute();[m
[31m-$stmt->close();[m
[32m+[m[32m//SELECT PREPARED ----------------------------------------------------------------------------------------[m
[32m+[m[32m//$query = "SELECT hid, text FROM auction WHERE hid = ?";[m
[32m+[m[32m//$stmt = $mysqli->prepare($query);[m
[32m+[m[32m//$value = 1;[m
[32m+[m[32m//$stmt->bind_param("i", $value);[m
[32m+[m[32m//$result = $stmt->execute();[m
[32m+[m[32m//$stmt->bind_result($col1, $col2);[m
[32m+[m[32m//while ($stmt->fetch()) {[m
[32m+[m[32m//		printf("%s %s\n", $col1, $col2);[m
[32m+[m[32m//}[m
 [m
[32m+[m[32m//if ($result = $mysqli->query($query)) {[m
[32m+[m[32m//    while ($row = $result->fetch_row()) {[m
[32m+[m[32m//        printf("%s,%s\n", $row[0], $row[1]);[m
[32m+[m[32m//    }[m
[32m+[m[32m//    $result->close();[m
[32m+[m[32m//}[m
 [m
[31m-$query = "SELECT Name, CountryCode, District FROM myCity";[m
[31m-if ($result = $mysqli->query($query)) {[m
[31m-    while ($row = $result->fetch_row()) {[m
[31m-        printf("%s (%s,%s)\n", $row[0], $row[1], $row[2]);[m
[31m-    }[m
[31m-    $result->close();[m
[31m-}[m
[32m+[m[32m//CALL PROCEDURE ----------------------------------------------------------------------------------------[m
[32m+[m[32m//$mysqli->query('CALL add_auction_participants(1,3,@ret,@rolled);');[m
[32m+[m[32m//$result = $mysqli->query('SELECT @ret, @rolled;');[m
[32m+[m[32m//var_dump($result->fetch_assoc()); //array (size=2)  '@ret' => string '3' (length=1)  '@rolled' => string '0' (length=1)[m
 [m
[31m-if ($mysqli->query("UPDATE MyGuests SET lastname='Doe' WHERE id=2") === TRUE) echo "Record updated successfully";[m
[31m-else echo "Error updating record: " . $mysqli->error;[m
 [m
 [m
 $mysqli->close();[m
\ No newline at end of file[m
[1mdiff --git a/vs/mysqliVSpdo.txt b/vs/mysqliVSpdo.txt[m
[1mnew file mode 100644[m
[1mindex 0000000..6d8a228[m
[1m--- /dev/null[m
[1m+++ b/vs/mysqliVSpdo.txt[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32mDatabase support 	12 different drivers 	MySQL only[m
[32m+[m[32mAPI                 OOP                     OOP + procedural[m
[32m+[m[32mConnection          Easy                    Easy[m
[32m+[m[32mNamed parameters 	Yes                     No[m
[32m+[m[32mObject mapping      Yes                     Yes[m
[32m+[m[32mPrepared statements[m
[32m+[m[32m(client side)       Yes                     No[m
[32m+[m[32mPerformance         Fast                    Fast[m
[32m+[m[32mStored procedures 	Yes                     Yes[m
\ No newline at end of file[m
